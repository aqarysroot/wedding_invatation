version: '3'

services:
  flask_app:
    build:
      context: ./flask_app
      dockerfile: Dockerfile
    container_name: flask_app
    restart: always
    networks:
      - app-network
    environment:
      - POSTGRES_USER=akarys
      - POSTGRES_PASSWORD=Gerew321321321
      - POSTGRES_DB=wedding
      - DATABASE_URL=postgresql://akarys:Gerew321321321@postgres:5432/wedding
    depends_on:
      - postgres

  postgres:
    image: postgres:13
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=akarys
      - POSTGRES_PASSWORD=Gerew321321321
      - POSTGRES_DB=wedding
    networks:
      - app-network
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  frontend:
    build:
      context: ./front_app
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
      - ./front_app/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - app-network
        
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  pgdata:
